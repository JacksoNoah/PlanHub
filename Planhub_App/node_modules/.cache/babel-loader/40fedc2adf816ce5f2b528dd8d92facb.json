{"ast":null,"code":"var _jsxFileName = \"/home/noahj734/Desktop/CurrentCourses/CS320/PlanHub/Planhub_App/src/components/schedule.js\";\nimport React, { Component } from \"react\";\nimport \"../App.css\";\nimport { Menu, Container, Button, Table, Form } from \"semantic-ui-react\";\nimport axios from 'axios'; // Contains the different options availible to choose from for priorities\n\nconst options = [{\n  text: \"1\",\n  value: \"1\"\n}, {\n  text: \"2\",\n  value: \"2\"\n}, {\n  text: \"3\",\n  value: \"3\"\n}, {\n  text: \"4\",\n  value: \"4\"\n}, {\n  text: \"5\",\n  value: \"5\"\n}];\nexport class MainApp extends Component {\n  constructor(props) {\n    super(props); //since we are extending class Table so we have to use super in order to override Component class constructor\n\n    this.myRef = React.createRef();\n    this.state = {\n      date: \"\",\n      data: \"\",\n      //will represent a task\n      priority: \"\",\n      // tasks array that will contain a date, data(task), and priority at each index\n      tasks: []\n    }; // Bind methods to this class\n\n    this.handlePrioritySelect = this.handlePrioritySelect.bind(this);\n    this.handleChangeData = this.handleChangeData.bind(this);\n    this.handleChangeDate = this.handleChangeDate.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  } // checking data base if it has data in it\n\n\n  componentDidMount() {\n    axios.get('http://localhost:3000/tasks').then(response => {\n      if (response.data.length > 0) {\n        this.state({\n          tasks: response.data.map(tasks => tasks)\n        });\n      }\n    });\n  } // Handle moment when date input box state is changing\n\n\n  handleChangeDate(e, {\n    value\n  }) {\n    this.setState({\n      date: value\n    });\n  } // Handle moment when data input box state is changing\n\n\n  handleChangeData(e, {\n    value\n  }) {\n    this.setState({\n      data: value\n    });\n  } // Handle moment when priority drop down is chosen.\n\n\n  handlePrioritySelect(e, {\n    value\n  }) {\n    this.setState({\n      priority: value\n    });\n  } // Handle moment when user submites data, data, and priority\n\n\n  handleSubmit(e) {\n    // Prevent syntethic event defaults\n    e.preventDefault(); // Check if every field (date, task, priority) has been filled. Update\n    // table if every entry has been filled.\n\n    if (this.state.date.length !== 0 && this.state.data.length !== 0 && this.state.priority.length !== 0) {\n      /* All three fields have been filled. Make new task */\n      //set the current states date, and data(task) into a new task\n      let newTask = {\n        date: this.state.date,\n        data: this.state.data,\n        priority: this.state.priority\n      }; // Appending the new task into a copy of the task array\n\n      const updatedTasks = [...this.state.tasks, newTask]; // making http request to server using axios library to add task\n\n      axios.post('http://localhost:3000/tasks/add', newTask).then(res => console.log(res.data)); // Update the state of the app with the new task, and clean class variable\n      // date and data for new input.\n\n      this.setState({\n        tasks: updatedTasks,\n        date: \"\",\n        data: \"\"\n      });\n    } else {\n      /* Something has not been filled (data, task, or priority). */\n\n      /* Make flags and alert an error message on what is missing. */\n      // Set up flags that check if every entry (date, task, priority) is set\n      let flag = [0, 0, 0];\n\n      if (this.state.priority.length === 0) {\n        // Priority has not been filled\n        flag[2] = 1;\n      }\n\n      if (this.state.data.length === 0) {\n        // The task has not been filled\n        flag[1] = 1;\n      }\n\n      if (this.state.date.length === 0) {\n        // The date has not been filled\n        flag[0] = 1;\n      } // Set up alert error messege, then alert.\n\n\n      let error = \"\";\n      if (flag[0] !== 0) error += \"Missing a Date entry\\n\";\n      if (flag[1] !== 0) error += \"Missing a Task entry\\n\";\n      if (flag[2] !== 0) error += \"Missing a Priority status\\n\";\n      alert(error);\n    }\n  }\n\n  renderTableData() {\n    return this.state.tasks.map((task, index) => {\n      const date = task.date,\n            data = task.data,\n            priority = task.priority; //destructuring\n\n      return React.createElement(\"tbody\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, date, \" \"), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, data), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, priority)));\n    });\n  } // Render the page\n\n\n  render() {\n    return (// Semantic UI stuff\n      // Menu Section: Making the top menu\n      // Container Section: The table menu\n      React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(Menu, {\n        color: \"blue\",\n        borderless: true,\n        attached: true,\n        inverted: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(Menu.Item, {\n        header: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"PlanHub\"), React.createElement(Menu.Menu, {\n        position: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(Menu.Item, {\n        href: \"/\",\n        name: \"Home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), React.createElement(Menu.Item, {\n        href: \"/appComponent\",\n        name: \"Schedule\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), React.createElement(Menu.Item, {\n        href: \"/\",\n        name: \"Login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }))), React.createElement(Container, {\n        className: \"scheduletable\",\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        widths: \"equal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Form.Input, {\n        fluid: true,\n        label: \"Date\",\n        placeholder: \"Enter Date\",\n        type: \"text\",\n        value: this.state.date,\n        onChange: this.handleChangeDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), React.createElement(Form.Input, {\n        fluid: true,\n        label: \"Task\",\n        placeholder: \"Enter Task\",\n        type: \"text\",\n        value: this.state.data,\n        onChange: this.handleChangeData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }), React.createElement(Form.Select, {\n        fluid: true,\n        selection: true,\n        label: \"Priority\",\n        options: options,\n        placeholder: \"Priority\",\n        onChange: this.handlePrioritySelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      })), React.createElement(Button, {\n        className: \"addbutton\",\n        type: \"submit\",\n        color: \"blue\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Add to Schedule\")), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, this.renderTableData()))))\n    );\n  }\n\n}","map":{"version":3,"sources":["/home/noahj734/Desktop/CurrentCourses/CS320/PlanHub/Planhub_App/src/components/schedule.js"],"names":["React","Component","Menu","Container","Button","Table","Form","axios","options","text","value","MainApp","constructor","props","myRef","createRef","state","date","data","priority","tasks","handlePrioritySelect","bind","handleChangeData","handleChangeDate","handleSubmit","componentDidMount","get","then","response","length","map","e","setState","preventDefault","newTask","updatedTasks","post","res","console","log","flag","error","alert","renderTableData","task","index","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../App.css\";\nimport { Menu, Container, Button, Table, Form } from \"semantic-ui-react\";\nimport axios from 'axios';\n\n// Contains the different options availible to choose from for priorities\nconst options = [\n  { text: \"1\", value: \"1\" },\n  { text: \"2\", value: \"2\" },\n  { text: \"3\", value: \"3\" },\n  { text: \"4\", value: \"4\" },\n  { text: \"5\", value: \"5\" }\n];\n\nexport class MainApp extends Component {\n  constructor(props) {\n    super(props); //since we are extending class Table so we have to use super in order to override Component class constructor\n    this.myRef = React.createRef();\n    this.state = {\n      date: \"\",\n      data: \"\", //will represent a task\n      priority: \"\",\n\n      // tasks array that will contain a date, data(task), and priority at each index\n      tasks: []\n    };\n    // Bind methods to this class\n    this.handlePrioritySelect = this.handlePrioritySelect.bind(this);\n    this.handleChangeData = this.handleChangeData.bind(this);\n    this.handleChangeDate = this.handleChangeDate.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  // checking data base if it has data in it\n  componentDidMount(){\n    axios.get('http://localhost:3000/tasks')\n      .then(response => {\n        if(response.data.length > 0){\n          this.state({\n            tasks: response.data.map(tasks => tasks)\n          })\n        }\n      })\n  }\n  \n  \n  // Handle moment when date input box state is changing\n  handleChangeDate(e, { value }) {\n    this.setState({ date: value });\n  }\n\n  // Handle moment when data input box state is changing\n  handleChangeData(e, { value }) {\n    this.setState({ data: value });\n  }\n\n  // Handle moment when priority drop down is chosen.\n  handlePrioritySelect(e, { value }) {\n    this.setState({ priority: value });\n  }\n\n  // Handle moment when user submites data, data, and priority\n  handleSubmit(e) {\n    // Prevent syntethic event defaults\n    e.preventDefault();\n\n    // Check if every field (date, task, priority) has been filled. Update\n    // table if every entry has been filled.\n    if (\n      this.state.date.length !== 0 &&\n      this.state.data.length !== 0 &&\n      this.state.priority.length !== 0\n    ) {\n      /* All three fields have been filled. Make new task */\n\n      //set the current states date, and data(task) into a new task\n      let newTask = {\n        date: this.state.date,\n        data: this.state.data,\n        priority: this.state.priority\n      };\n\n      // Appending the new task into a copy of the task array\n      const updatedTasks = [...this.state.tasks, newTask];\n      \n      // making http request to server using axios library to add task\n      axios.post('http://localhost:3000/tasks/add', newTask)\n        .then(res => console.log(res.data));\n\n      // Update the state of the app with the new task, and clean class variable\n      // date and data for new input.\n      this.setState({\n        tasks: updatedTasks,\n        date: \"\",\n        data: \"\"\n      });\n    } else {\n      /* Something has not been filled (data, task, or priority). */\n      /* Make flags and alert an error message on what is missing. */\n\n      // Set up flags that check if every entry (date, task, priority) is set\n      let flag = [0, 0, 0];\n      if (this.state.priority.length === 0) {\n        // Priority has not been filled\n        flag[2] = 1;\n      }\n      if (this.state.data.length === 0) {\n        // The task has not been filled\n        flag[1] = 1;\n      }\n      if (this.state.date.length === 0) {\n        // The date has not been filled\n        flag[0] = 1;\n      }\n\n      // Set up alert error messege, then alert.\n      let error = \"\";\n      if (flag[0] !== 0) error += \"Missing a Date entry\\n\";\n      if (flag[1] !== 0) error += \"Missing a Task entry\\n\";\n      if (flag[2] !== 0) error += \"Missing a Priority status\\n\";\n      alert(error);\n    }\n\n  }\n\n  renderTableData() {\n    return this.state.tasks.map((task, index) => {\n      const { date, data, priority } = task; //destructuring\n      return (\n        <tbody key={index}>\n          <Table.Row key={index}>\n            <Table.Cell >{date} </Table.Cell>\n            <Table.Cell>{data}</Table.Cell>\n            <Table.Cell >{priority}</Table.Cell>\n          </Table.Row>\n        </tbody>\n      );\n    });\n  }\n\n\n// Render the page\nrender() {\n  return (\n    // Semantic UI stuff\n    // Menu Section: Making the top menu\n    // Container Section: The table menu\n    <div className=\"app\">\n      <Menu color=\"blue\" borderless attached inverted>\n        <Menu.Item header>PlanHub</Menu.Item>\n        <Menu.Menu position=\"right\">\n          <Menu.Item href=\"/\" name=\"Home\" />\n          <Menu.Item href=\"/appComponent\" name=\"Schedule\" />\n          <Menu.Item href=\"/\" name=\"Login\" />\n        </Menu.Menu>\n      </Menu>\n      <Container className='scheduletable' textAlign=\"center\">\n        <Form>\n          <Form.Group widths=\"equal\">\n            <Form.Input\n              fluid\n              label=\"Date\"\n              placeholder=\"Enter Date\"\n              type=\"text\"\n              value={this.state.date}\n              onChange={this.handleChangeDate}\n            />\n            <Form.Input\n              fluid\n              label=\"Task\"\n              placeholder=\"Enter Task\"\n              type=\"text\"\n              value={this.state.data}\n              onChange={this.handleChangeData}\n            />\n            <Form.Select\n              fluid\n              selection\n              label=\"Priority\"\n              options={options}\n              placeholder=\"Priority\"\n              onChange={this.handlePrioritySelect}\n            />\n          </Form.Group>\n          <Button className=\"addbutton\" type=\"submit\" color=\"blue\" onClick={this.handleSubmit}>\n            Add to Schedule\n            </Button>\n        </Form>\n\n        <Container>\n          <Table>{this.renderTableData()}</Table>\n        </Container>\n      </Container>\n    </div>\n  );\n}\n}\n"]},"metadata":{},"sourceType":"module"}